*:where(:not(html, iframe, canvas, img, svg, video):not(svg *, symbol *)) {
    all: unset;
    display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
    cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
    list-style: none;
}

/* For images to not be able to exceed their container */
img {
    max-width: 100%;
    height: auto;
}

/* Global styles */

@font-face {
    font-family: 'Focal';
    src: url('./../fonts/Focal-Regular.otf');
    src: url('./../fonts/Focal-Regular.woff');
    src: url('./../fonts/Focal-Regular.woff2');
}

body {
    font-family: 'Focal', sans-serif;
    font-size: 22px;
    line-height: 28px;
    letter-spacing: 0.2px;
}

/* Global variables */
:root {
    --black: #000;
    --white: #fff;
    --offwhite: #fefcf7;
    --blur-text-shadow: 0 0 5px;
    --blur-text-opacity: 0.5;
    --margin-space: 22px;
    --landscape-media-width: 75%;
    --portrait-media-width: 50%;
    --body-margin: 50px;
    --body-margin-mobile: 25px;
}

/* Blur effect */
::selection {
    color: var(--black);
    background-color: var(--white);
}

.blur {
    color: transparent;
    text-shadow: var(--blur-text-shadow) rgba(255, 255, 255, var(--blur-text-opacity));
}

.blur a,
.blur * a {
    color: transparent;
}

.blur ::after,
.blur img {
    filter: blur(3px);
}

.underlined {
  position: relative;
}

.underlined:after {
  content: '';
  position: absolute;
  bottom: -2px;
  margin: 0 auto;
  left: 0;
  right: 0;
  height: 1.8px;
  width: 100%;
  background: var(--white);
}

a.underlined:after {
  width: 100%;
  background-color: var(--white);
}