---
import CarouselCore from './CarouselCore.svelte';
import Img from './Img.astro';
import { imageId, imageAnchor } from '../utils/link-handling';

interface Image {
    src: ImageMetadata;
    alt: string;
}

export interface Props {
    uniqueTitle: string;
    images: Image[];
}

const { uniqueTitle, images } = Astro.props;
const selectedClass = 'selected';
---

<CarouselCore
    images={images.length}
    uniqueTitle={uniqueTitle}
    selectedClass={selectedClass}
    client:load
>
    <span slot="images">
        <div class="images">
            {
                images.map((image, index) => (
                    <Img
                        src={image.src}
                        alt={image.alt}
                        id={imageId(uniqueTitle, index)}
                    />
                ))
            }
        </div>
    </span>

    <span slot="anchors">
        <nav>
            {
                images.map((_, index) => (
                    <a
                        class={index === 0 ? selectedClass : ''}
                        href={imageAnchor(uniqueTitle, index)}
                    >
                        â€¢
                    </a>
                ))
            }
        </nav>
    </span>
</CarouselCore>

<style>
    nav {
        display: flex;
        gap: 10px;
        justify-content: center;
    }

    nav a {
        font-size: 48px;
        color: grey;
    }

    nav a.selected {
        color: black;
    }

    :global(.images > *) {
      width: 100%;
      flex-shrink: 0;
    }

    .images {
        display: flex;
        scroll-snap-type: x mandatory;
        scroll-snap-align: center;
        scroll-behavior: smooth;
        overflow: hidden;
    }
</style>
